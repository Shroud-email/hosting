version: "3.9"
services:

  db:
    image: postgres:14.0-alpine3.14
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_DATABASE}
    dns:
      - 1.1.1.1
      - 1.0.0.1

  spamassassin:
    image: dinkel/spamassassin
    restart: unless-stopped
    logging:
      driver: none

  haraka:
    image: ghcr.io/shroud-email/haraka:main
    restart: unless-stopped
    depends_on:
      - spamassassin
      - db
    ports:
      - "25:25"
      - "465:465"
    environment:
      - EMAIL_DOMAIN=${EMAIL_DOMAIN}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - PGHOST=db
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGDATABASE=${DB_DATABASE}
    volumes:
      - ./haraka/haraka_config:/app/haraka_config
      - pem_certs:/app/haraka_config/config/certs

  web:
    image: ghcr.io/shroud-email/shroud.email:1
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "1587:1587"
    depends_on:
      - db
      - haraka
    environment:
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - APP_DOMAIN=${APP_DOMAIN}
      - EMAIL_DOMAIN=${EMAIL_DOMAIN}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_DATABASE}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - SMTP_RELAY=haraka
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
      - DB_ENCRYPTION_KEY=${DB_ENCRYPTION_KEY}
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_YEARLY_PRICE=${STRIPE_YEARLY_PRICE}
      - STRIPE_MONTHLY_PRICE=${STRIPE_MONTHLY_PRICE}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - NOTIFIER_WEBHOOK_URL=${NOTIFIER_WEBHOOK_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_HOST=${S3_HOST}
      - EMAIL_OCTOPUS_API_KEY=${EMAIL_OCTOPUS_API_KEY}
      - EMAIL_OCTOPUS_LIST_ID=${EMAIL_OCTOPUS_LIST_ID}

  caddy:
    image: ghcr.io/shroud-email/caddy-permissive-file-storage:main
    restart: unless-stopped
    environment:
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - APP_DOMAIN=${APP_DOMAIN}
      - EMAIL_DOMAIN=${EMAIL_DOMAIN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile

  cron:
    build: ./cron
    restart: unless-stopped
    environment:
      - EMAIL_DOMAIN=${EMAIL_DOMAIN}
    volumes:
      - caddy_data:/caddy
      - pem_certs:/pem

volumes:
  db_data:
  caddy_data:
  pem_certs:
